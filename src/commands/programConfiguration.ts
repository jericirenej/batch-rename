import { PROGRAM_VERSION, VALID_DATE_TRANSFORM_TYPES } from "../constants.js";
import type { ProgramOptions } from "../types.js";

const programOptions: ProgramOptions[] = [
  {
    short: "o",
    long: "odd",
    type: "",
    description: "Transform argument. Rename using odd numbers (2n+1)",
    defaultValue: "",
  },
  {
    short: "e",
    long: "even",
    type: "",
    description: "Transform argument. Rename using even numbers (2n)",
    defaultValue: "",
  },
  {
    short: "p",
    long: "preserveOriginal",
    type: "[boolean]",
    description:
      "Preserve original filename. Original name will be added after the prepend string, generated by the transform function.",
    defaultValue: "true",
    choices: ["true", "false"],
  },
  {
    short: "r",
    long: "restore",
    type: "",
    description:
      "Restore transformed files to previous names, if restore file is available.",
    defaultValue: "",
  },
  {
    short: "D",
    long: "dryRun",
    type: "",
    description: "Run transform operation without writing to disk.",
    defaultValue: "",
  },
  {
    short: "c",
    long: "cleanRollback",
    type: "",
    description: "Remove rollback file, if it exists",
    defaultValue: "",
  },
  {
    short: "a",
    long: "appendName",
    type: "[name]",
    description:
      "Specify an optional name to add after the prefix, generated by the transformation function. This overwrites the preserveOriginal flag.",
    defaultValue: "",
  },
  {
    short: "d",
    long: "dateRename",
    type: "[dateOption]",
    description:
      "Rename by different types of date data. Defaults to creationDate. Can be used together with the appendName and dryRun flags.",
    defaultValue: "creationDate",
    choices: VALID_DATE_TRANSFORM_TYPES as unknown as string[],
  },
  {
    short: "",
    long: "detailedDate",
    type: "",
    description:
      "Used with the dateRename option. If included, hours, minutes, and seconds will be included in the chosen date transformation",
  },
  {
    short: "s",
    long: "searchAndReplace",
    type: "<search,filter...>",
    description:
      "Will rename part of the file names string that match the filter argument with the replacer argument. A string|regex can be supplied. More than two arguments will be ignored.\nCan be used with the dryRun flag.",
    defaultValue: "",
  },
];

const programDescription =
  "Allows for batch renaming of files with based on: odd or even numbering, date metadata, or search and replace arguments.";

const programName = "batchRename";
const programConfiguration = {
  programVersion: PROGRAM_VERSION,
  programName,
  programDescription,
  programOptions,
};

export default programConfiguration;
